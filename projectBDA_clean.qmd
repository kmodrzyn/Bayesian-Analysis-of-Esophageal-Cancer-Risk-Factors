---
title: "Influence of alcohol and tobacco on esophageal cancer"
subtitle: ""
author: Quan Tran, Krzysztof Modrzyński
format: 
  html:
    toc: true
    code-tools: true
    code-line-numbers: true  
    number-sections: true
    mainfont: Georgia, serif
    page-layout: article
  pdf:  
    geometry:
    - left=1cm,top=1cm,bottom=1cm,right=7cm
    number-sections: true
    code-annotations: none
editor: source
---

# Introduction

Esophageal cancer is cancer in the esophagus -- the food pipe connecting the throat and the stomach. In recent years, esophageal cancer has been among the most common types of cancer: in 2020, it ranked 8th in the most diagnosed type of cancer globally, with 604,000 new cases. It is also the 6th most deadly cancer killing over 544,000 people in 2020.

![](images/graphic.png){fig-alt="Cancer cases 2020" fig-align="center"}

Smoking and alcohol use has long been known as two major risk factors associated with esophageal cancer, and they are among the few risk factors that can be controlled or changed by the subject. The goal of this project is to utilize Bayesian modelling to the data from a case-control study of esophageal cancer in hopes of drawing a relation between a person's level of tobacco and alcohol intake and their chance of developing esophageal cancer. Our modelling will also account for the patients' age as that is an important factor in development of cancers.

# Data set

Our data set was originally created by Tuyns AJ, Péquignot G, Jensen OM. in a paper *Esophageal cancer in Ille-et-Vilaine in relation to levels of alcohol and tobacco consumption. Risks are multiplying. (1977).*

It was also used in a statistical book *Breslow, N. E. and Day, N. E. (1980) Statistical Methods in Cancer Research. Volume 1: The Analysis of Case-Control Studies. IARC Lyon / Oxford University Press.* In the book, the data set was used to showcase statistical methods and techniques. There was also logistic regression performed on the data set. However, no Bayesian statistics was used as the book focuses on multiple regression models.

To access the data set, we will be using the $medicaldata$ package.

```{r loading dataset, warning=FALSE}
library(medicaldata)
espoh <- medicaldata::esoph_ca
head(espoh)
```

Our data set contains 5 columns:

-   $agegp$ - contains age range of people in the group

-   $alcgp$ - contains information on alcohol consumption (grams of consumed alcohol in a day) in the group

-   $tobgp$ - contains information on tobacco consumption (grams of consumed tobacco in a day) in the group

-   $ncases$ - number of esophageal cancer cases in the group

-   $ncontrols$ - number of control patients in the group

The total number of patients in the group is $ncases + ncontrols$.

As we can see this data format is not very good for analysis as $alcgp$ and $tobgp$ columns contain string format data due to including unit type in the column. We are going to use Python to transform the data frame so that all columns include numerical values.

``` python
import pandas as pd
import numpy as np 

# function spliting the range into 2 values: lower and upper limit
def split_range(x): 
    if "-" in x:
        x1, x2 = x.split('-')
        return ((int(x1), int(x2)))
    else:
        x1 = x.split('+')[0]
        return ((int(x1), -1))

# reading the file containing our data set
df = pd.read_csv('espoh.csv')

df['agegp'] = df['agegp'].apply(split_range)
df['alcgp'] = df['alcgp'].replace("0-39g/day", "0-39")
df['tobgp'] = df['tobgp'].replace("0-9g/day", "0-9")
df['alcgp'] = df['alcgp'].apply(split_range)
df['tobgp'] = df['tobgp'].apply(split_range)

df['age_low'] = df['agegp'].apply(lambda x: x[0])
df['age_high'] = df['agegp'].apply(lambda x: x[1])

df['alc_low'] = df['alcgp'].apply(lambda x: x[0])
df['alc_high'] = df['alcgp'].apply(lambda x: x[1])

df['tob_low'] = df['tobgp'].apply(lambda x: x[0])
df['tob_high'] = df['tobgp'].apply(lambda x: x[1])

df = df.drop(columns=['agegp', 'alcgp', 'tobgp'])

# df.to_csv('changed_espoh.csv') save updated data frame
#print(df)
```

The Python file split the ranges into 2 columns and changed the values to be numeric. In the rows that contained no upper limit of the range we have placed the value $-1$ to indicate that.

```{r loading changed data set}
new <- read.csv("changed_espoh.csv", sep = ",") # loading new data set
new <- new[, -1] # dropping the 1st column containing indices 
head(new)
```

# Model description

Let us first see how the alcohol and tobbaco consumption, as well as the age correlate to the risk of being diagnosed with esophageal cancer.

```{r, warning = FALSE}
library(ggplot2)
ggplot(new, aes(x=new$alc_low, y= new$ncases / (new$ncases + new$ncontrols))) +
  geom_point() + geom_smooth(formula = y ~ x) +
  xlab("Alcohol consumption in a day") + 
  ylab("Ratio of cancer cases in the group")
```

```{r, warning = FALSE}
ggplot(new, aes(x=new$tob_low, y= new$ncases / (new$ncases + new$ncontrols))) +
  geom_point() + geom_smooth(formula = y ~ x) +
  xlab("Tobacco consumption in a day") + 
  ylab("Ratio of cancer cases in the group")
```

```{r, warning = FALSE}
ggplot(new, aes(x=new$age_low, y= new$ncases / (new$ncases + new$ncontrols))) +
  geom_point() + geom_smooth(formula = y ~ x) +
  xlab("Age of patients in the group") + 
  ylab("Ratio of cancer cases in the group")
```

As we can see, the risk of being diagnosed with cancer is correlated more or less linearly with age, alcohol and tobacco consumption.

Therefore, we will be using 3 different models:

## Bernoulli logistic regression

$$
\theta \sim \alpha \cdot alc + \beta \cdot tob + \gamma \cdot age
$$

$$
y \sim BinomialLogit(N, theta)
$$

where $y$ is the $ncases$ variable and $N$ is $ncases + ncontrols$.

In this model we sample from the ranges to create a data point for all the people from each group. We sample from the ranges uniformly if there is an upper limit and exponentially if there is no upper limit. Unfortunately, we needed to use uniform distribution for sampling as there was no

```{r}
df <- data.frame(apply(new, 2, as.numeric))

column_names <- c("Age", "Tobac", "Alco", "Has_cancer")
new_df <- data.frame(matrix(ncol = length(column_names), nrow = 0))
colnames(new_df) <- column_names

for (i in 1:dim(df)[1]) {
  for (j in 1:df[i, "ncases"]) {
    age_sample <- ifelse(df[i, "age_high"] > 0, runif(1, df[i, "age_low"], df[i, "age_high"]), rexp(1, rate = 0.7) + df[i, "age_low"])
    tob_sample <- ifelse(df[i, "tob_high"] > 0, runif(1, df[i, "tob_low"], df[i, "tob_high"]), rexp(1, rate = 0.01) + df[i, "tob_low"])
    alc_sample <- ifelse(df[i, "alc_high"] > 0, runif(1, df[i, "alc_low"], df[i, "alc_high"]), rexp(1, rate = 0.01) + df[i, "alc_low"])
    new_row = data.frame(
      Age = age_sample,
      Tobac = tob_sample,
      Alco = alc_sample,
      Has_cancer = 1
    )
    new_df <- rbind(new_df, new_row)
  }
  for (k in 1:df[i, "ncontrols"]) {
    age_sample <- ifelse(df[i, "age_high"] > 0, runif(1, df[i, "age_low"], df[i, "age_high"]), rexp(1, rate = 0.7) + df[i, "age_low"])
    tob_sample <- ifelse(df[i, "tob_high"] > 0, runif(1, df[i, "tob_low"], df[i, "tob_high"]), rexp(1, rate = 0.01) + df[i, "tob_low"])
    alc_sample <- ifelse(df[i, "alc_high"] > 0, runif(1, df[i, "alc_low"], df[i, "alc_high"]), rexp(1, rate = 0.01) + df[i, "alc_low"])
    new_row = data.frame(
      Age = age_sample,
      Tobac = tob_sample,
      Alco = alc_sample,
      Has_cancer = 0
    )
    new_df <- rbind(new_df, new_row)
  }
}
colnames(new_df) <- c("age", "tob", "alc", "cancer")
head(new_df)
```

We will use $brms$ package to construct this model.

```{r, warning= FALSE, message= FALSE}
library(cmdstanr)
library(brms)
# Globally specfiy cmdstan backend for brms
options(brms.backend="cmdstanr")
options(brms.file_refit="on_change")

binomial <- brm(
  formula = bf(cancer ~ alc + tob + age),
  family = bernoulli(),
  prior = c(
    prior(normal(0, 1), class = "Intercept"),
    prior(normal(0, 1), class = "b", coef = "alc"),
    prior(normal(0, 1), class = "b", coef = "tob"),
    prior(normal(0, 1), class = "b", coef = "age")
  ),
  data = new_df,
  chains = 4
)
```

We will be using $N(0,1)$ as a prior for coefficients of linear regression.

Let us check the convergence diagnostics for the model:

```{r}
binomial
```

```{r}
pp_check(binomial)
```

## Hierarchical Bernoulli logistic regression

```{r}
id <- c(1:length(new_df$alc))
new_df <- cbind(new_df, id)
hier <- brm(
  formula = bf(cancer ~ alc + tob + age + (1 | id)),
  family = bernoulli(),
  prior = c(
    prior(normal(0, 1), class = "Intercept"),
    prior(normal(0, 1), class = "b", coef = "alc"),
    prior(normal(0, 1), class = "b", coef = "tob"),
    prior(normal(0, 1), class = "b", coef = "age")
  ),
  data = new_df,
  chains = 4
)
```

```{r}
pp_check(hier)
```
